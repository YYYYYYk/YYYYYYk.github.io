(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{318:function(t,a,s){"use strict";s.r(a);var r=s(10),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前期工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前期工作"}},[t._v("#")]),t._v(" 前期工作")]),t._v(" "),a("h2",{attrs:{id:"复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),a("h3",{attrs:{id:"时间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),a("p",[a("strong",[t._v("常见时间复杂度：")]),t._v("\nO(1) 常量\nO(log(n)) 换底公式,忽略对数的‘底’，统一记作O(log(n))\nO(n)\nO(n²)")]),t._v(" "),a("p",[a("strong",[t._v("递归的时间复杂度：")]),t._v("\n如： 斐波那契数列。\nO(2ⁿ)，指数级别的时间复杂度开销大")]),t._v(" "),a("h3",{attrs:{id:"空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[t._v("#")]),t._v(" 空间复杂度")]),t._v(" "),a("p",[t._v("常见空间复杂度：\nO(1) 算法执行的临时空间不随n的大小而变化，如定义常量\nO(n) 如申请长度为n的数组\n对数阶复杂度非常少，而且空间复杂度相对时间复杂度分析简单的多，不在多阐述")]),t._v(" "),a("h2",{attrs:{id:"常见算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见算法"}},[t._v("#")]),t._v(" 常见算法")]),t._v(" "),a("h3",{attrs:{id:"欧几里得"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#欧几里得"}},[t._v("#")]),t._v(" 欧几里得")]),t._v(" "),a("p",[t._v("求两个正整数最大公约数的算法")]),t._v(" "),a("h2",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[t._v("#")]),t._v(" tips")]),t._v(" "),a("ol",[a("li",[t._v("哈希表在js中相当于Map数据结构，Map常用方法有set，get，has，delete，size，clear")])])])}),[],!1,null,null,null);a.default=e.exports}}]);